@use 'sass:map';
@use '..' as raiponce;

html {
  font-size: 62.5%;
}

body {
  font-family: 'Droid Sans', sans-serif;
}

.page-content {
  padding: 4rem 2rem;
}

.container {
  margin-bottom: 4rem;
  padding-bottom: 4rem;
  border-bottom: 1px solid lightgrey;

  &:last-child {
    margin-bottom: 0;
  }
}

.title {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 2rem;
  text-transform: uppercase;
  letter-spacing: 0.1rem;
}

.description {
  font-size: 1.2rem;
  margin-bottom: 2rem;
  margin-top: -1rem;
  color: darkslategrey;
}

p {
  margin-bottom: 0.5rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.example-10to30 {
  font-size: raiponce.lerp(
    (
      768px: 10px,
      1920px: 30px
    )
  );
}

// In this example the ratio is 1rem = 10px
.example-10to30-rem {
  font-size: raiponce.lerp(
    (
      768px: 1rem,
      1920px: 3rem
    ),
    10
  );
}

.example-10to30-alt {
  font-size: raiponce.lerp(
    (
      1000px: 10px,
      1200px: 30px
    )
  );
}

// Implement device detection
.detect-device-pointer {
  color: firebrick;
  font-size: 1.8rem;

  @include raiponce.use-touchscreen() {
    color: forestgreen;

    &:before {
      content: 'You are using a touchscreen! ðŸ“±';
    }

    > span {
      display: none;
    }
  }

  @include raiponce.use-mouse() {
    color: forestgreen;

    &:before {
      content: 'You are using a mouse! ðŸ–±';
    }

    > span {
      display: none;
    }
  }
}

// Responsive grid
.example-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  grid-gap: 1rem;

  .item {
    background: burlywood;
    height: 1rem;
  }
}

// Responsive grid with variable width
.example-grid-clamp {
  @extend .example-grid;
  $width: raiponce.lerp(
    (
      380px: 100px,
      1600px: 200px
    )
  );
  $gap: raiponce.lerp(
    (
      380px: 10px,
      1920px: 40px
    )
  );
  grid-template-columns: repeat(auto-fill, minmax($width, 1fr));
  grid-gap: $gap;
}
